class SimpleFirstPersonCamera : ZilchComponent
{
  [Property] var RotationSpeed : Real = 1.0;
  [Property] var RotationLimits : Real2 = Real2(-45, 45);
  var AccumulatedRotation : Real = 0;
  
  function Initialize(init : CogInitializer)
  {
    //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    Zero.Connect(this.Space, Events.MouseMove, this.OnMouseMove);
  }

  function OnMouseMove(event : ViewportMouseEvent)
  {
    var rotationLimitsRads = Math.ToRadians(this.RotationLimits);
    this.AccumulatedRotation -= event.Movement.Y * this.RotationSpeed;
    this.AccumulatedRotation = Math.Clamp(this.AccumulatedRotation, rotationLimitsRads.X, rotationLimitsRads.Y);
    
    this.Owner.Transform.LocalRotation = Math.ToQuaternion(Real3.XAxis, this.AccumulatedRotation);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
  }
}
